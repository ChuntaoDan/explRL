# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/agents.ipynb.

# %% auto 0
__all__ = ['Policy', 'flexiblePolicy', 'RL', 'Agent', 'flexibleAgent']

# %% ../nbs/agents.ipynb 3
class Policy:
    '''This Policy Class specifies a general architecture. '''
    def __init__(self):
        self.theta = None
        self.actions = None



# %% ../nbs/agents.ipynb 4
class flexiblePolicy(Policy):
    '''This flexiblePolicy Class specifies a fully flexible policy with a set of basis functions and a learnable set of weights. '''
    def __init__(self):
        super().__init__()
        self.omega = None   # vector of weights
        self.fk = None  # basis functions
        self.wParams = None # a vector of parameters used to specify nonlinear transformations of the weights
        self.integ = None    # an integrator signal used in the drift diffusion process to generate fixations


# %% ../nbs/agents.ipynb 5
class RL:
    '''This RL Class performs reinforcement learning: after taking an action, update parameters 
    based on feedback from the environment.
    '''
    def __init__(self,policy):
        self.policy = policy
        
    def chooseAction(self):
        pass
        return self.act
    
    def updateParams(self):
        pass
        return self.params

# %% ../nbs/agents.ipynb 6
class Agent:
    '''This Class specifies agents with a defined policy and reinforcement learning algorithm. '''
    def __init__(self,theta,goal,policy,rl,params):
        self.theta = theta   # current heading
        self.goal = goal
        self.policy = policy
        self.rl = rl
        self.params = params  # structure containing simulation parameters
        self.dx = None  # change in heading
        self.dt = None  # change in time 
        
        
    def samplePolicy(self):
        raise NotImplementedError("Override me")

# %% ../nbs/agents.ipynb 7
class flexibleAgent(Agent):
    '''This Agent Class specifies agents using a fully flexible policy and reinforcement learning algorithm. '''
    def __init__(self):
        super().__init__()

    def samplePolicy(self):
        '''samples a change in heading over a change in time to use in training'''
        
        return self.dx, self.dt, self.integ
        

